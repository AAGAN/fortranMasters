	PROGRAM BOUNDARY LAYER
	USE PORTLIB
	IMPLICIT NONE
	DOUBLE PRECISION , PARAMETER :: PI=3.141592654D0
	DOUBLE PRECISION ,ALLOCATABLE ::U(:,:) , V(:,:) , A(:,:) 
     &, B(:) , X(:), T(:,:),D(:),R(:),S(:),DELTA(:),SAI(:)
      INTEGER ,ALLOCATABLE :: DELTAPOINTER(:)
	DOUBLE PRECISION ALPHA,BETA,XX,YY,DELTAX,DELTAY,NEU,UINF,
     &THICKNESS,UMAX,MMM,FPRIM,ETA,KF,RO,CP,GAMA,T0,TS,VMAX
	INTEGER I,J,K,M,N,MM,STEP
	REAL(8) elapsed_time
	CHARACTER*1 STR,ANS
	WRITE(*,*)'******************************************************'
	WRITE(*,*)'** THIS PROGRAM SOLVES THE BOUNDARY LAYER EQUATIONS **'
	WRITE(*,*)'** FOR A 2-D CIRCULAR CYLINDER WITH R=1.0           **'
	WRITE(*,*)'** OR A WEDGE. AND SAVES THE RESULTS FOR TECPLOT.   **'
        WRITE(*,*)'** THIS PROGRAM USES THE METRIC SYSTEM.             **'
	WRITE(*,*)'******************************************************'
	WRITE(*,*)
	WRITE(*,*)'    IF YOU WANT TO SOLVE THE BOUNDARY LAYER ON A'
        WRITE(*,*)'    WEDGE ENTER "W"'
	WRITE(*,*)
	WRITE(*,*)'    IF YOU WANT TO SOLVE THE BOUNDARY LAYER ON A'
        WRITE(*,*)'    2-D CIRCULAR CYLINDER PLEASE ENTER "C"'
	WRITE(*,*)
	READ(*,*) STR
	IF(STR.EQ.'W')THEN
	WRITE(*,*)'    ENTER M IN THE FALKNER-SKAN EQUATION (Ue=X^M):'
	READ(*,*) MMM
	ELSEIF(STR.EQ.'C')THEN
	WRITE(*,*)
	WRITE(*,*)'    DO YOU WANT TO HAVE POTENTIAL FLOW OUTSIDE THE'
	WRITE(*,*)'    BOUNDARY LAYER OF THE CIRCULAR CYLINDER(Y/N):?'
	WRITE(*,*)
	READ(*,*) ANS;WRITE(*,*)
	ENDIF
	T0=273.2D0
	TS=373.2D0
	KF=24.2D-3
	RO=1.294D0
	CP=1003.0D0
	UINF=1.330D0
	NEU=13.3D-6
	DELTAX=0.0001D0
	DELTAY=0.0001D0
	THICKNESS=0.02D0
	STEP=5
	WRITE(*,*)'******************************************************'
	WRITE(*,*)
	M=INT(PI/DELTAX)
	N=INT(THICKNESS/DELTAY)
	ALLOCATE(U(N+1,M+1),V(N+1,M+1),T(N+1,M+1),A(N-1,N-1),
     &B(N-1),X(N-1))
	U(:,:)=0D0;V(:,:)=0D0;UMAX=0.D0;VMAX=0.D0
	IF(STR.EQ.'C')THEN
	U(:,1)=0.001D0;V(:,1)=-0.1D0;U(1,1)=0.D0;V(1,1)=0.D0
	ELSE
	IF(MMM.EQ.0.5)THEN
	DO 300 I=1,N-1
	ETA=DBLE(I)*DELTAY*DELTAX**(-0.25D0)
	FPRIM=.0002D0*ETA**6-.0037D0*ETA**5+.0201D0*ETA**4-
     &.0168D0*ETA**3-.2388D0*ETA**2+.8969D0*ETA**1+.0001D0
	U(I+1,1)=DELTAX**MMM*FPRIM
300	CONTINUE			
	V(:,1)=0D0;U(1,1)=0D0;V(1,1)=0D0
	ELSE
	U(:,1)=UINF*DELTAX**MMM;V(:,1)=0D0;U(1,1)=0D0;V(1,1)=0D0
	ENDIF		
	ENDIF
	DO 100 I=0,M
	IF((STR.EQ.'C').AND.(ANS.EQ.'N'))THEN
	U(N+1,I+1)=(1.814D0*DBLE(I)*DELTAX-0.271D0*(DBLE(I)
     &*DELTAX)**3D0-0.0471D0*(DBLE(I)*DELTAX)**5D0)
     &*UINF
	ELSEIF((STR.EQ.'C').AND.(ANS.EQ.'Y'))THEN
	U(N+1,I+1)=2*SIN(DBLE(I)*DELTAX)*UINF
	ELSEIF(STR.EQ.'W')THEN
	U(N+1,I+1)=(DBLE(I)*DELTAX)**MMM
	ENDIF
	V(N+1,I+1)=0.D0;U(1,I+1)=0.D0;V(1,I+1)=0.D0
100	CONTINUE
	elapsed_time = TIMEF()
	DO 120 I=2,M+1
	A(:,:)=0.D0;B(:)=0.D0 !;BU=0
	DO 130 J=2,N-2
	ALPHA=NEU*DELTAX/U(J+1,I-1)/DELTAY**2D0
	BETA=V(J+1,I-1)*DELTAX/2D0/U(J+1,I-1)/DELTAY
	A(J,J)=1D0+2D0*ALPHA
	A(J,J-1)=(-1D0)*ALPHA
	A(J,J+1)=(-1D0)*ALPHA
	B(J)=U(J+1,I-1)-BETA*(U(J+1,I-1)-U(J,I-1))+(U(N+1,I)**2D0-
     &U(N+1,I-1)**2D0)/2D0/U(J+1,I-1)
130	CONTINUE
	ALPHA=NEU*DELTAX/U(N,I-1)/DELTAY**2D0
	BETA=V(N,I-1)*DELTAX/2D0/U(N,I-1)/DELTAY
	A(N-1,N-1)=1D0+2D0*ALPHA
	A(N-1,N-2)=(-1D0)*ALPHA
	B(N-1)=U(N,I-1)-BETA*(U(N+1,I-1)-U(N-1,I-1))+(U(N+1,I)**2D0-
     &U(N+1,I-1)**2D0)/2D0/U(N,I-1)+ALPHA*U(N+1,I)
	ALPHA=NEU*DELTAX/U(2,I-1)/DELTAY**2D0
	BETA=V(2,I-1)*DELTAX/2D0/U(2,I-1)/DELTAY
	A(1,1)=1D0+2D0*ALPHA
	A(1,2)=(-1D0)*ALPHA
	B(1)=U(2,I-1)-BETA*(U(3,I-1)-U(1,I-1))+(U(N+1,I)**2D0-
     &U(N+1,I-1)**2D0)/2D0/U(2,I-1)+ALPHA*U(1,I)
	CALL TOMAS(A,B,X,N-1)
	DO 140 J=1,N-1
	U(J+1,I)=X(J)
	V(J+1,I)=V(J,I)-DELTAY/2D0/DELTAX*(U(J+1,I)-U(J+1,I-1)+
     &U(J,I)-U(J,I-1))
	IF (U(J+1,I).GT.UMAX) UMAX=U(J+1,I)
	IF (ABS(V(J+1,I)).GT.VMAX) VMAX=V(J+1,I)
140	CONTINUE  
	IF (U(2,I).LE.0) THEN
	WRITE(*,*) 
	WRITE(*,*)
	WRITE(*,*)'******************************************************'
	WRITE(*,*)
	WRITE(*,*)'*THE B.L. SEPARATES AT(DEGREES):',
     &DBLE(I-1)*DELTAX/(PI/180.D0)
	MM=I
	GOTO 11  	
	END IF
120	CONTINUE
11	elapsed_time = TIMEF()
	WRITE(*,*)
	WRITE(*,*)'******************************************************'
	WRITE(*,*)
	WRITE(*,*)'*MAXIMUM VELOCITY IN THE X-DIRECTION IS(M/S):',UMAX,VMAX
	WRITE(*,*)
	WRITE(*,*)'******************************************************'
	WRITE(*,*)
	WRITE(*,*)'*THE SOLUTION LASTS:',elapsed_time,'SECOND(S).'
	WRITE(*,*)
	WRITE(*,*)'******************************************************'
	ALLOCATE(D(N),R(N),S(N),DELTA(MM),DELTAPOINTER(MM),SAI(MM))
	T(:,:)=T0
	T(1,:)=TS
	DO I=1,MM
	 T(N+1,I)=DBLE(I)*DELTAX
	END DO
	DO 910 J=2,MM
	BETA=V(2,J)*DELTAX/2.D0/U(2,J)/DELTAY
	GAMA=(KF*DELTAX)/(RO*CP*U(2,J)*DELTAY**2D0)
	D(2)=T(2,J-1)-BETA*(T(3,J-1)-T(1,J-1))
	R(2)=GAMA/(1.D0+2.D0*GAMA)
	S(2)=(GAMA*TS+D(2))/(1D0+2.D0*GAMA)
	DO 920 I=3,N 
	GAMA=(KF*DELTAX)/(RO*CP*U(I,J)*DELTAY**2D0)
	BETA=V(I,J)*DELTAX/2.D0/U(I,J)/DELTAY
	D(I)=T(I,J-1)-BETA*(T(I+1,J-1)-T(I-1,J-1))
	R(I)=GAMA/(1.D0+2.D0*GAMA-GAMA*R(I-1))
	S(I)=(GAMA*S(I-1)+D(I))/(1D0+2.D0*GAMA-GAMA*R(I-1))
920	CONTINUE
	T(N,J)=(GAMA*T0+GAMA*S(N)+D(N))/(1.D0+2.D0*GAMA-GAMA*R(N))
	DO 921 I=N-1,2,-1
	T(I,J)=R(I)*T(I+1,J)+S(I)
921	CONTINUE
910	CONTINUE
	DELTA(:)=0D0
	DO I=1,MM
	DO J=1,N+1
	IF (U(J,I).GE.(0.9D0*U(N+1,I))) THEN
	DELTA(I)=DBLE(J)*DELTAY
	DELTAPOINTER(I)=J
	EXIT
	END IF
	END DO
	END DO
	OPEN (UNIT=10,FILE='DELTA.DAT',ACTION='READWRITE',
     &STATUS='REPLACE')
	DO I=1,MM
	WRITE(10,*) DBLE(I)*DELTAX,DELTA(I)
	END DO
	CLOSE (10)
	SAI(:)=0D0
	DO I=1,MM
	SAI(I)=SAI(I)+V(DELTAPOINTER(I),I)*DELTAX
	DO J=DELTAPOINTER(I),DELTAPOINTER(I)+100
	SAI(I)=SAI(I)+U(J,I)*DELTAY
	END DO
	END DO
	OPEN (UNIT=11,FILE='SAI.DAT',ACTION='READWRITE',
     &STATUS='REPLACE')
	DO I=1,MM
	WRITE(11,*) DBLE(I)*DELTAX,SAI(I)
	END DO
	CLOSE (11)
	OPEN (UNIT=20,FILE='BOUNDARY.DAT',ACTION='READWRITE',
     &STATUS='REPLACE')
	XX=0.D0
	IF(MM.EQ.0) MM=M
	WRITE(20,*) 'VARIABLES = "X", "Y", "U", "V" ,"T"'
	WRITE(20,3) N+1,INT(MM/STEP)-1
3	FORMAT('ZONE I=',I4,' J=',I4,' F=POINT')
	DO 150 I=0,INT(MM/STEP)-1
	YY=0.D0
	WRITE(20,*)
	DO 160 J=1,N+1
	WRITE(UNIT=20,FMT=10) XX,YY,U(J,INT(I*STEP)+1),V(J,INT(I*STEP)+1)
     &,T(J,INT(I*STEP)+1)
	YY=YY+DELTAY
160	CONTINUE
	XX=XX+DELTAX*STEP
150	CONTINUE
10	FORMAT(1X,EN15.3,1X,EN15.3,1X,EN15.3,1X,EN15.3)
	END
	SUBROUTINE TOMAS(A,B,X,T)
	INTEGER T
	DOUBLE PRECISION A(T,T),B(T),X(T)
	INTEGER I,J
	X(:)=0.D0
	DO 200 I=2,T
	A(I,I)=A(I,I)-A(I,I-1)/A(I-1,I-1)*A(I-1,I)
	B(I)=B(I)-A(I,I-1)/A(I-1,I-1)*B(I-1)
200	CONTINUE
	X(T)=B(T)/A(T,T)
	DO 210 I=1,T-1
	J=T-I
	X(J)=(B(J)-A(J,J+1)*X(J+1))/A(J,J)
210	CONTINUE
	RETURN
	END